---
version: "2"
messages:
  $i18n: locales.yml
template:
  name:
    $ref: "#/messages/template.name"
  description:
    $ref: "#/messages/template.description"
  header: "![](toolchain.svg?localize)"
  icon: secure-lock-kubernetes.svg
  required:
    - build
    - repo
    - tekton-catalog-repo
    - tekton-gitsecure
  info:
    git url: >
      "[" + $env.repository + "]" +
        "(" + $env.repository + ")"
    git branch: >
      "[" + $env.branch + "]" +
        "(" + $env.repository +
          "/tree/" + $env.branch + ")"
    hosted_region: ""
toolchain:
  name: "kube-toolchain-{{timestamp}}"
  template:
    getting_started:
      $ref: "#/messages/template.gettingStarted"
services:
  repo:
    service_id: >
      $env.source_provider ? $env.source_provider : 'hostedgit'
    parameters:
      repo_name: "hello-containers-{{timestamp}}"
      repo_url: >
        $env.type === 'link' ? 
          $env.app_repo : $env.template.info.hosted_region !== "" ? 'https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/hello-containers':
          'https://github.com/open-toolchain/hello-containers'
      source_repo_url: >
        $env.type === 'fork' || $env.type === 'clone' ?
          $env.app_repo : $env.template.info.hosted_region !== "" ? 'https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/hello-containers':
          'https://github.com/open-toolchain/hello-containers'
      type: $env.type || 'clone'
      has_issues: true
      enable_traceability: true
      legal: true
  pipeline-repo:
    service_id: >
      $env.pipeline_type !== 'tekton' ? '' : $env.source_provider ? $env.source_provider : 'hostedgit'
    parameters:
      repo_name: "secure-kube-toolchain-{{timestamp}}"
      repo_url: >
        if ( $env.template.info.hosted_region !== "" ) {
          "https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/secure-kube-toolchain"
        } else {
          "https://github.com/open-toolchain/secure-kube-toolchain"
        }
      source_repo_url: >
        if ( $env.template.info.hosted_region !== "" ) {
          "https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/secure-kube-toolchain"
        } else {
          "https://github.com/open-toolchain/secure-kube-toolchain"
        } 
      type: $env.type || 'clone'
      has_issues: false
      enable_traceability: false
      legal: true
      kind: ['pipeline']
  tekton-catalog-repo:
    service_id: >
      $env.pipeline_type !== 'tekton' ? '' : $env.source_provider ? $env.source_provider : 'hostedgit'
    parameters:
      repo_name: 'tekton-catalog-{{timestamp}}'  
      repo_url: >
        if ( $env.template.info.hosted_region !== "" ) {
          "https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/tekton-catalog"
        } else {
          "https://github.com/open-toolchain/tekton-catalog"
        }
      source_repo_url: >
        if ( $env.template.info.hosted_region !== "" ) {
          "https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/tekton-catalog"
        } else {
          "https://github.com/open-toolchain/tekton-catalog"
        }
      type: 'clone'
      has_issues: false
      enable_traceability: false
      kind: ['pipeline']
  pr:
    service_id: >
      $env.pipeline_type === 'tekton' ? 'pipeline' : ''
    parameters:
      services:
        - repo
        - tekton-catalog-repo
      name: 'pr-pipeline'
      type: >
        $env.pipeline_type === 'tekton' ? 'tekton': 'classic'
      ui-pipeline: true
      configuration:
        content:
          $text: >
            if ( $env.pipeline_type === 'tekton' ) {
              "south_pr_pipeline_tekton.yml"
            } else {
              "pipeline.yml"
            }
        env:
          PIPELINE_REPO: pipeline-repo
          APP_REPO: repo
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          APP_NAME: "{{form.pipeline.parameters.app-name}}"
          ARTIFACTORY_DOCKER_CONFIG_JSON: '{{form.artifactoryComp.parameters.docker_config_json}}'
          PRIVATE_WORKER: '{{services.privateWorker.parameters.name}}'
          PIPELINE_REPO_BRANCH: >
            $env.branch ? $env.branch : 
            $env.template.info.hosted_region !== "" ? 'main': 'master'
          TEKTON_CATALOG_REPO: tekton-catalog-repo
          REGISTRY_REGION_ID: "{{form.pipeline.parameters.registry-region}}"
          REGISTRY_NAMESPACE: "{{form.pipeline.parameters.registry-namespace}}"
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-pr-listener';
            } else if ( $env.source_provider === 'gitlab' ) {
              'gitlab-pr-listener';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-pr-listener';
            } else {
              'gitlab-pr-listener';
            }
          COMMONS_HOSTED_REGION: >
            $env.template.info.hosted_region !== "" ? 'https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/commons/-/raw/main':
            'https://raw.githubusercontent.com/open-toolchain/commons/master'
          DEFINITIONS_BRANCH: >
            $env.template.info.hosted_region !== "" ? 'main': 'master'
          APP_REPO_BRANCH: >
            $env.template.info.hosted_region !== "" ? 'main': 'master'
          IBMCLOUD_API: >
            if ( $env.env_id === 'ibm:ys1:us-south') {
              "https://test.cloud.ibm.com"
            } else {
              "https://cloud.ibm.com"
            }
        execute: false
  build:
    service_id: pipeline
    parameters:
      services:
        - repo
      name: 'ci-pipeline'
      ui-pipeline: true
      type: >
        $env.pipeline_type === 'tekton' ? 'tekton': 'classic'
      configuration:
        content:
          $text: >
            if ( $env.pipeline_type === 'tekton' ) {
              "south_pipeline_tekton.yml"
            } else {
              "pipeline.yml"
            }
        env:
          APP_REPO: repo
          APP_NAME: "{{form.pipeline.parameters.app-name}}"
          REGISTRY_REGION_ID: "{{form.pipeline.parameters.registry-region}}"
          REGISTRY_NAMESPACE: "{{form.pipeline.parameters.registry-namespace}}"
          API_KEY: "{{form.pipeline.parameters.api-key}}"
          PROD_REGION_ID: "{{form.pipeline.parameters.prod-region}}"
          PROD_RESOURCE_GROUP: "{{form.pipeline.parameters.prod-resource-group}}"
          PROD_CLUSTER_NAME: "{{form.pipeline.parameters.prod-cluster-name}}"
          PROD_CLUSTER_NAMESPACE: "{{form.pipeline.parameters.prod-cluster-namespace}}"
          PIPELINE_REPO: pipeline-repo
          PIPELINE_REPO_BRANCH: >
            $env.branch ? $env.branch : 
            $env.template.info.hosted_region !== "" ? 'main': 'master'
          TEKTON_CATALOG_REPO: tekton-catalog-repo
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
          COMMONS_HOSTED_REGION: >
            $env.template.info.hosted_region !== "" ? 'https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/commons/-/raw/main':
            'https://raw.githubusercontent.com/open-toolchain/commons/master'
          DEFINITIONS_BRANCH: >
            $env.template.info.hosted_region !== "" ? 'main': 'master'
          APP_REPO_BRANCH: >
            $env.template.info.hosted_region !== "" ? 'main': 'master'
          IBMCLOUD_API: >
            if ( $env.env_id === 'ibm:ys1:us-south') {
              "https://test.cloud.ibm.com"
            } else {
              "https://cloud.ibm.com"
            }
        execute: >
          $env.pipeline_type === 'tekton' ? 'manual-run' : true
  devops-insights:
      service_id: >
        $env.env_id !== 'ibm:ys1:us-south' ? 'draservicebroker' : ''
form:
  pipeline:
    parameters:
      app-name: >
        $env.appName ?
          '{{appName}}' : '{{services.repo.parameters.repo_name}}'
      prod-cluster-namespace: >
        $env.prodClusterNamespace ?
          '{{prodClusterNamespace}}' : 'prod'
      registry-region: '{{registryRegion}}'
      registry-namespace: '{{registryNamespace}}'
      api-key: '{{apiKey}}'
      prod-region: '{{prodRegion}}'
      prod-resource-group: '{{prodResourceGroup}}'
      prod-cluster-name: '{{prodClusterName}}'
    schema:
      $ref: deploy.json
